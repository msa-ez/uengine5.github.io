{"hash":"33107aef86e38b746815b3568dba3b6a5d2717b8","data":{"markdownPage":{"id":"3ef7a719ccd5a3d7da1be1c6c03d2df5","title":"외부서비스와 BPM연동","description":"","path":"/api-customizing/external-service/","timeToRead":4,"content":"<h1 id=\"외부서비스와-bpm연동\"><a href=\"#%EC%99%B8%EB%B6%80%EC%84%9C%EB%B9%84%EC%8A%A4%EC%99%80-bpm%EC%97%B0%EB%8F%99\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>외부서비스와 BPM연동</h1>\n<h2 id=\"1-예제-어플리케이션\"><a href=\"#1-%EC%98%88%EC%A0%9C-%EC%96%B4%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>1. 예제 어플리케이션</h2>\n<p>어플리케이션(App)에서 BPM으로 데이터를 전달 하기 위해서는 App에서 발생한 이벤트를 Message Broker를 통해 BPM으로 전송 합니다. App은 이벤트를 Message Broker에 송신하고 BPM에서 해당 메시지를 수신하여 처리합니다.</p>\n<p><img class=\"g-image g-image--lazy g-image--loading\" src=\"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 2560 1664' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-4bd21215ea27f2d49cd649755f13e3b4'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-4bd21215ea27f2d49cd649755f13e3b4)' width='2560' height='1664' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAAqCAYAAAADBl3iAAAACXBIWXMAAAsSAAALEgHS3X78AAAIPUlEQVRo3uVa63PTRhDP//%2bRD%2b0XptOZTmEKlAlkCgQCIRBInKQOCXkSpyEvO37JjziWLem03d%2bezpZsyY84YaDVzM5J99jb29vd29XtFPHj%2bz6DvJHr%2bNRuGVDUYmgngk9O25fxBs%2bwx/TxvOg87SHzAJSKzuO5YRxxuPrbe3FMhT9QViyfCgWfSkWiUonIKuuyDDDvKLm9WEQ/RuqNz4DGpZJ5gAO4SyEAfgP4Rp9C3ie7GZ3nsqakHu0GOuODcRHg%2bVr2CAwoyuIUXVw4dHp6RbmcQ9lsi87O7OC9zcQrTTAj9q7NAL1A4MNcOUCuTefnrWC%2bJte70gfM6mNAPdisEPPyeY/H2zLeMMQAvocywLKUcPD05IpmZ5fozp1f6PHjVzQ9PU937/5Bb96k6d7vM3RwUKJKhZEyI7wJJKBaJZqZeUf37//F8y3Ty5cpnm%2bOXrxYoocPZ2lxcYvqdSxMxTBAdRiADQOuZ88W6d69Gfr11z9pezunaSz6ozPASAAGYFc%2bfTqmk5OGcPXoqCY7tLeXlzatCteVgED8yyS7Bdxm1/f3C5TJlOn4%2bJLOuQ59igkS0N1ljcuM%2b/q1JjRrNRqDAVbZZ277gX6ScDAqRmwXLF1Kn0IyA8J4u6CNLXYvPE85wC12xwrrv54nf%2bFT8yo6T70GNdU4BPJ%2bxE6ZsQYwX8tWyQwAdeDQVUNPdnWlqNHw%2bFtRvaJL1EVKBqUUDzWlXmj4PQ6cNnArnqeLC3PWax4zx4vgF1qYJlj9ML04gQytXVBsHD0BvEfb%2bjdrqne3kp627cnOReGmni7OdsvrnCpxcww%2bcnWd67BdctVQHLEqYMS0971tRxG1223Wt0Pa3d3jk%2bKUbcUn2tra4roM699XKff391kPz7nPLq2vr9PKyop8r66u0uHhIfffZlEt9xGIBSTRM4xeLRlqZBxTg/XVD525LbYHFba01U6ZzWbp8%2bfPtLm5Sel0mtbW1uQdi8UiwYB8Ps9Gc482NjbYKm8Ls1B%2b%2bfJFAN/AVWdTf3p2Srs7B8Gm%2bQNp6qVvOAN6%2b1OUAcOs9mXNlt2y2EIZAOGXl5cCjUaD9fYq8o1FmcXVajWpNyXqTDvw4j2TOaDVlfVAcKMEj0JjEgMGPVMjaWiMCtzm4zpehAEwqGAu1K7ZbJJt2wJgmuM40R0O7MiNMcAgaDW9oaI4MYB4GNsYmqFSUDGozfHxMfsLZ5RKpcTexD2QglthwG09nXmYAcVCmdWixOd5F7Bg2AvYnVwuJ7YFgG%2boUJEPfUjE1vYWLS%2btBjhVx/j9MAyABFQrsA81sRcGjG0xYGyIsSumTz5/QWenudgjL47%2b744BDoexk7oYFatOh5mvbB/aQ5nwXTLAFSdmPPsBQymLr1bo7fx7mn3xikrwrxMcoO%2baAb0u78jjfX18Nuo2XWQLbCuyYiPgt/T6Cv85BoT7202Hg6eiMKPVaonXiePyxlTgto7BSSXA9M/x7j%2bZnuEIsCCnB3yHG5KA4VZ1WPvtSoD2IZVLA%2bma2BGCRwZPLMxVz/MEejmNOoghRBDeHHbDdV0ZjzrgApgxLdudWAXARKftRQzptSWg6wqrzjfOWwQ9iP4Q5MBLQwC0s7Mj32j78OGD1CNIgiE6ODigubk5WlxcFLFEZIhAClEkosWkaPBaDLjJWMAgqFoNIRyLubi4oJOTE4nywAQsAO8ARICoAyDqQxvGwIsDg9AO9xUA43R0dCQAfQXj3i98jARDNxEN3ggD7IbbEVcAxBfijfPXiL8B1BnAd7g/AO9QAwPm26pYdHKcJV9Rn/h%2bB9Gg%2biaRIBaviY86OfiRAimBz49QHP4/JCjujHdvQwK%2bRTRIQTSoYngNGwN7gkVDnaCGUDOoYvSnmA6HPce/HQbcejTYdDmYyYq9CQMiQNgSSIIBRIMoTaQICVlZSdHrubehaND/waLB4AhTyuuzLb0Au9Ff73b%2bBcT96vuhYoHrPE27Sfu7GUotr5HdsvsW/8PFAuO60vBRVlJ/08Jb7W/A%2bfpfRIMRcVckhrDRuJTTAnbChMuxEqB9fBr4G3lYMBT%2b1TzqmT1KMJTk9AxqL5eqtLaa5t1vUMWqyEkBexHnM8RcjFAstJoqsW28BImwk9OPo58BSfMk47DKNVr6mGJ1qLMEWD0xCg27GvNjod30EtvGE1c/JCn9eMCA6NVY/DzJOJCwMej6bcjVmFyE1ny5ea1VAZ6AVXal1PW6RD/c8vpq/OtxpKsAB664zRz4rlj4KRqdB31QOj3ODS5yw%2b2G7grTapWcoE5F2lxnkAoofT1ukg4qVZLkBCQe1Gr6HZ4n3k3WxqDr8YE3TXI9Tp0kCQBwV0LvmAdX5eZqO%2b56PJ83GS26n4yra1o7NIbaR0iQ0KkvSITY3Dyl9%2b9x13dEa2sZydbY3s5ymJthb60pxJWKk2WIAAfwp9P/sGt7xiHyGa2nj/j9nFKpfUnGwKKQkjM4Q0TnBuzs5Ngb/ELLy3uS3qPzBMbKENEMQHbF4uJn%2bvmn3%2bjZsw/0%2bvUaPXjwnJaWdunRo5fsk1eC9JPJGAAc8/Npmp5%2bQwsLG/Tu3QY9fbpAr16t0PPn%2bKdwIJIwOEXG76TIILXmyZN5pnFWmDFeiowyKTKam5gY70ZEjWhKxhUQTpokFWSEVGsaL/BrkVcCqNPZKH5sklRdkqSCTJJQFotR2d76kSVA6zZS0JQsEKUhSrLDgpSzoqTTqeunyeU1jg5%2bLosBfknDK%2bjvYkBDrATkuylwBrq4/B5QyQwwtCOREDuqAvCGAPpcJ1FS/0ccfQ4vZh6/h1aVMDYMvTj%2bBR18DwEXHYLsAAAAAElFTkSuQmCC' /%3e%3c/svg%3e\" width=\"2560\" alt=\"예제\" data-srcset=\"/assets/static/98.82a2fbd.30c1edf0c466e2a78c0c952d5a08ec6a.png 480w, /assets/static/98.cbab2cf.30c1edf0c466e2a78c0c952d5a08ec6a.png 1024w, /assets/static/98.2665e34.30c1edf0c466e2a78c0c952d5a08ec6a.png 1920w, /assets/static/98.42db587.30c1edf0c466e2a78c0c952d5a08ec6a.png 2560w\" data-sizes=\"(max-width: 2560px) 100vw, 2560px\" data-src=\"/assets/static/98.42db587.30c1edf0c466e2a78c0c952d5a08ec6a.png\"><noscript><img class=\"g-image g-image--lazy g-image--loaded\" src=\"/assets/static/98.42db587.30c1edf0c466e2a78c0c952d5a08ec6a.png\" width=\"2560\" alt=\"예제\"></noscript>\n이미지 1) 장애 처리 TroubleTicket 예제</p>\n<ol>\n<li>장애 티켓 발행 (TroubleIssued)</li>\n<li>장애 티켓 해결 (TroubleCompleted)</li>\n</ol>\n<p>예시로 App에서는 \"장애 티켓 발행(TroubleIssued)\" 라는 문제가 발생되었다는 이벤트를 송신 하게 됩니다.\n송신처리는 메시지브로커를 통해서 BPM으로 전달 되고, BPM에서는 \"TroubleIssued\"의 타입에 따라서 처리 됩니다.</p>\n<p>처리되고 다음 업무 화면(TroubleCompleted)을 표시 할 수 있도록 처리를 하고, 해당 화면에서는 \"장애 티켓 해결(TroubleCompleted)\" 라는 이벤트 메시지 수신시 처리 하게 됩니다.</p>\n<p>이와 같이 서로 통신 방식에서는 메시지 브로커를 통해서 비의존성을 가지고, 장애를 차단 할 수 있습니다.</p>\n<h3 id=\"11-연동-원칙\"><a href=\"#11-%EC%97%B0%EB%8F%99-%EC%9B%90%EC%B9%99\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>1.1 연동 원칙</h3>\n<p>App과 BPM을 독립적으로 유지하면서 연동하기 위해 아래와 같은 구조로 구성되어 있습니다.</p>\n<ul>\n<li>\n<p>단방향 의존성 </p>\n<ul>\n<li>비의존성: APP에서 이벤트 메시지를 전송할 뿐, BPM 호출을 기다리지 않습니다.</li>\n<li>장애차단: BPM에서 오류및 중지가 되었더라도, APP에서의 영향이 없습니다. </li>\n<li>보장성: 중지된 BPM이 재실행 되더라도, 이전의 데이터가 반드시 처리가 되도록 보장합니다.</li>\n</ul>\n</li>\n<li>\n<p>역할분리</p>\n<ul>\n<li>\n<p>App</p>\n<ul>\n<li>업무 화면 </li>\n<li>도메인로직 </li>\n<li>데이터 관리</li>\n</ul>\n</li>\n<li>\n<p>BPM</p>\n<ul>\n<li>업무 규칙(컨디션)에 따른 프로세스 분기/반복 </li>\n<li>담당자를 조직도에서 찾아서 담당자에게 업무 화면(App)을 라우팅 (워크아이템)</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"12-reqres-방식과-pubsub-방식의-차이점\"><a href=\"#12-reqres-%EB%B0%A9%EC%8B%9D%EA%B3%BC-pubsub-%EB%B0%A9%EC%8B%9D%EC%9D%98-%EC%B0%A8%EC%9D%B4%EC%A0%90\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>1.2 Req/Res 방식과 Pub/Sub 방식의 차이점</h3>\n<ul>\n<li>\n<p>Request/Response(동기식) 방식</p>\n<ul>\n<li>App에서 BPM으로 요청을 보내고, BPM의 응답을 기다리는 방식입니다.</li>\n<li>단점: BPM이 응답하지 않거나 지연될 경우 APP의 처리가 지연되거나 실패할 수 있습니다.</li>\n<li>장점: 요청에 대한 즉각적인 응답을 받을 수 있어 처리 상태를 바로 확인할 수 있습니다.</li>\n</ul>\n</li>\n<li>\n<p>Publisher/Subscriber(비동기식) 방식</p>\n<ul>\n<li>App에서 이벤트를 Message Broker에 publish하면, BPM이 이를 수신(subscribe)하여 처리하는 방식입니다.</li>\n<li>단점: 이벤트 처리의 순서나 타이밍을 보장하기 어렵습니다.</li>\n<li>장점: APP과 BPM이 독립적으로 동작할 수 있으며, 시스템의 결합도를 낮추고 확장성을 높일 수 있습니다.</li>\n</ul>\n</li>\n</ul>\n<p>이러한 방식의 차이에서 BPM과 App을 독립적으로 작동시키면서, BPM이 APP을 바라볼수 있는 구조를 가져가기 위해서는 Pub/Sub(비동기식)이 BPM과 App 간의 통신에 적합합니다.</p>\n<h2 id=\"2-message-broker\"><a href=\"#2-message-broker\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>2. Message broker</h2>\n<p>Message Broker는 시스템간 비동기(Pub/Sub)통신을 가능하게 하여, 시스템의 독립성을 높이고, 결합도는 낮게 하여 시스템의 효율성을 향상시킵니다. 이러한 특성으로 인해 대규모 시스템, 분산 시스템, 마이크로서비스 아키텍처에 널리 사용됩니다.</p>\n<p>App에서는 BPM과 연동하기 위해 Message Broker(Kafka)를 이용해서 서로 독립적인 서비스로 유지 하면서 아래와 같이 비동기적 통신으로 구성 되어 있습니다. </p>\n<h3 id=\"21-어플리케이션publisher\"><a href=\"#21-%EC%96%B4%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98publisher\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>2.1 어플리케이션(Publisher)</h3>\n<p>이벤트 메시지 송신처리하는 App에서는 메시지브로커에 메시지를 전달 하면 됩니다. 비동기식 방식에서 송신쪽 처리를 하기 위한 App의 예제 입니다. App에서 장애 티켓 발행(TroubleIssued) 이벤트를 발생시키고, BPM에서 장애 티켓 발행(TroubleIssued) 이벤트를 수신하여 처리하게 됩니다.</p>\n<pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TroubleIssued</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">AbstractEvent</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Long</span> id<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> troubleType<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> description<span class=\"token punctuation\">;</span>\n   \n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">TroubleIssued</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">TroubleIssued</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TroubleTicket</span> ticket<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>ticket<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>   \n<span class=\"token punctuation\">}</span></code></pre>\n<ol>\n<li>장애 티켓 발행(TroubleIssued) 이벤트 작성시 AbstractEvent클래스를 상속하고, TroubleIssued 속성값을 설정 합니다.</li>\n</ol>\n<pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">// 예시 2-1) Kafka를 통한 메시지 송신</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AbstractEvent</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">publish</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">KafkaProcessor</span> processor <span class=\"token operator\">=</span> <span class=\"token class-name\">ItsmApplication</span><span class=\"token punctuation\">.</span>applicationContext<span class=\"token punctuation\">.</span><span class=\"token function\">getBean</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">KafkaProcessor</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">MessageChannel</span> outputChannel <span class=\"token operator\">=</span> processor<span class=\"token punctuation\">.</span><span class=\"token function\">outboundTopic</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        outputChannel<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>\n            <span class=\"token class-name\">MessageBuilder</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">withPayload</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">setHeader</span><span class=\"token punctuation\">(</span>\n                    <span class=\"token class-name\">MessageHeaders</span><span class=\"token punctuation\">.</span><span class=\"token constant\">CONTENT_TYPE</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token class-name\">MimeTypeUtils</span><span class=\"token punctuation\">.</span><span class=\"token constant\">APPLICATION_JSON</span>\n                <span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">setHeader</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"type\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">getEventType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">publishAfterCommit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">TransactionSynchronizationManager</span><span class=\"token punctuation\">.</span><span class=\"token function\">registerSynchronization</span><span class=\"token punctuation\">(</span>\n            <span class=\"token keyword\">new</span> <span class=\"token class-name\">TransactionSynchronizationAdapter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token annotation punctuation\">@Override</span>\n                <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">afterCompletion</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> status<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token class-name\">AbstractEvent</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">publish</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<ol start=\"2\">\n<li>AbstractEvent 클래스는 메시지브로커 채널 연결하여 메시지를 전달 할 수 있도록 선언한 클래스입니다.</li>\n</ol>\n<pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">// TroubleTicket.java</span>\n<span class=\"token annotation punctuation\">@Entity</span>\n<span class=\"token annotation punctuation\">@Table</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"troubleTicket_table\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token annotation punctuation\">@Data</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TroubleTicket</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token annotation punctuation\">@Id</span>\n    <span class=\"token annotation punctuation\">@GeneratedValue</span><span class=\"token punctuation\">(</span>strategy <span class=\"token operator\">=</span> <span class=\"token class-name\">GenerationType</span><span class=\"token punctuation\">.</span><span class=\"token constant\">AUTO</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Long</span> id<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> troubleType<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> description<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> reason<span class=\"token punctuation\">;</span>\n    \n    <span class=\"token annotation punctuation\">@PostPersist</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onPostPersist</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">TroubleIssued</span> trouble <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TroubleIssued</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        trouble<span class=\"token punctuation\">.</span><span class=\"token function\">publishAfterCommit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">complete</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TroubleTicket</span> ticket<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">TroubleCompleted</span> troubleTicketCompleted <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TroubleCompleted</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        troubleTicketCompleted<span class=\"token punctuation\">.</span><span class=\"token function\">setReason</span><span class=\"token punctuation\">(</span>ticket<span class=\"token punctuation\">.</span><span class=\"token function\">getReason</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        troubleTicketCompleted<span class=\"token punctuation\">.</span><span class=\"token function\">publishAfterCommit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">TroubleTicketRepository</span> <span class=\"token function\">repository</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">TroubleTicketRepository</span> troubleTicketRepository <span class=\"token operator\">=</span> <span class=\"token class-name\">ItsmApplication</span><span class=\"token punctuation\">.</span>applicationContext<span class=\"token punctuation\">.</span><span class=\"token function\">getBean</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TroubleTicketRepository</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> troubleTicketRepository<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<ol start=\"3\">\n<li>TroubleTicket 클래스로 이벤트를 송신(Publisher) 하기 위해서 실행하는 클래스 입니다. publishAfterCommit() 함수를 통해서 메시지브로커 쪽으로 송신 하게 됩니다.</li>\n</ol>\n<pre class=\"language-sh\"><code class=\"language-sh\"><span class=\"token punctuation\">{</span><span class=\"token string\">\"eventType\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"TroubleIssued\"</span>,<span class=\"token string\">\"timestamp\"</span>:1718873491127,<span class=\"token string\">\"id\"</span>:1,<span class=\"token string\">\"troubleType\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"sw\"</span>,<span class=\"token string\">\"description\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"sw is error.\"</span><span class=\"token punctuation\">}</span></code></pre>\n<h3 id=\"22-bpmsubscriber\"><a href=\"#22-bpmsubscriber\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>2.2 BPM(Subscriber)</h3>\n<pre class=\"language-text\"><code class=\"language-text\"> App에서 메시지가 발행될 때마다 수신되며, 조건에 따라 메시지를 분류할 수 있습니다.</code></pre>\n<h2 id=\"3-프로세스-모델링\"><a href=\"#3-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4-%EB%AA%A8%EB%8D%B8%EB%A7%81\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>3. 프로세스 모델링</h2>\n<p>\"프로세스 정의\"탭 에서 프로세스에 대한 정의를 진행합니다. 프로세스를 정의하기 위해서 전체적인 TASK를 그리고, 각 TASK 마다 역할을 설정하여, 업무에 대한 내용을 정의합니다.</p>\n<h3 id=\"31-외부-어플리케이션-설정\"><a href=\"#31-%EC%99%B8%EB%B6%80-%EC%96%B4%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98-%EC%84%A4%EC%A0%95\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>3.1 외부 어플리케이션 설정</h3>\n<ol>\n<li>상단에 tools 중 \"Create task\"를 클릭하여 task를 생성합니다. </li>\n</ol>\n<p><img class=\"g-image g-image--lazy g-image--loading\" src=\"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 2560 1363' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-1c8d99ea903277ecf39759786841fc40'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-1c8d99ea903277ecf39759786841fc40)' width='2560' height='1363' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAAiCAYAAADvVd%2bPAAAACXBIWXMAABYlAAAWJQFJUiTwAAAJcklEQVRo3s1a2XLbyBX1D%2bbf8geZSqUyD8lTquJU5sWVtzi2J2NHliVTlkQSBBcQxL4vN%2bc00CBIASRtj%2bOwfNSNBnq5p%2b/WgJ8VZSXnfnleSJwkEsWJ7PxYkqyUGu1VXSvgn1RVLWXVu%2bYf2Zf8lVWlnvsalC04LEuuvzzGmXkoB5%2bJs0KelUUhf/jz32RmLOXD9Xu5u7uTj7e3Mp/P5fWrV/L4%2bHBARpDkatI0TaVA3%2bVqI3P05cBBEEoYRvLpYaruLcwVFlTKdGaI43qqf90j5NJfrUht%2bvlBII7joAwly/OD%2bxpcC39hFInr%2bb15m/ar61uJcK/Ac89yDPL7P/1VFhBktTQVATcfPshsNpPJZCKe6%2b4HAPw4l7yoUG00x/cD8TgJ7pHMLMvE2tpYRIXJPanbkoT9Gj%2bOE4UhykyR2y7uAJosyjY0L0mM41gyyPHs0h3oNAAEuFEmcVpImBSS5JVChGsihnmkRa3quj3NK9UeQnvYJ2r7Ntd9oE3fG3ymGV%2bjGaft1z7L9RGs6zXp%2bv65pt2DHJ9PAAZzwhQkpGoAliTEa6Guw/ZeWx6j6ZMqbeJ4LIn%2bPdU3zrp7fjw%2bngafi/NaISJJJJ6bAAyvAwRQuOfPn8tqtVK29fj4KJvNRvmA%2b/t7ZSt9EjgJVedrf3EcyXw2ldn0UZVTzBu3c2lbDQNfrM1aNus11D6QAip9yofQ76zWG/iltewgy8baQhZLtvZu2JzysiHg%2bvoaduzBgYVKeNZt2xbLspRN9x1NlJbih7G8fPkSTi8AUUZTGkbTH31sTOjCd0zgTwK0cawVFjWZ3MliYcqLFy/EcgK5W7kysyNZuKkYTiLrsJRtImLFtSqXfq7umW4mppcrs4BTUfRoIqbTqfJVilREqsndg9x8/KQc8/XNRG4n93L/MHviLPnLipaAi00ApbLDBAsyTUkwIQVVjgm7R1CLXHh81n3fV6Twmu2LxULs3U7%2b8%2b6drP1M3jzsZB6KGHGDaSDy6O/B61mLB1zv4vIJARx3u92KloJawnmpvU8jifaTPQJUfIY35UBaC7j4Y7Z0GbRRoD8w%2b1cq9la9UFR1Zb9dh6MMucXWCWVluYhAthhLS3ZeLG6QihOAWMDR8BNl/wFCLKPKcWjU%2bQavQ2hj4HtigmxlSlrqzrT24bAjgAvcYWf0jkWdLfbURvYEsKMcLWDIYdYj90gYQ9RmbcHGt7I0l7IwTBVO4wgJF0zsGHEEclxHrbU/Vp9Y5idQUEmwvAy3o9YBPkHG52pEqRMmcCDIEAEDCcgl0ARQEPoXkk3yaUosT5kh84lhAhq66f1DICtryYnqKYoWkF3cpGcCdGRjqn%2bKgM/N6PR8rNNOteA0wXwks%2bsIwLOjBNSN4B%2b2cKTxuSjVSOPELQEchIsgCUMLvoSAL9EATUDjOF3lVL%2bGAKq1FdWyDCpFwiYEogrRpQHrXtr4AGbLbtyaANNCnTqyzoVUR87mnAmcY7zvfKqqVCQwetDnaBNQ3nzAtvW157mD9/sEUMhPu0rsuNEIlRQBzE5pHkVVd9mz0gAKenV1pRazXC7VWYCx9Tj%2bnyJAJUgRUuQgU6UfsmzqAYGJfOxIgMUFKL0gOyCAgusoNKR9ey111BxxerwBjURpS8AdCHCThpCw9Qth1lxTA3iPh%2bBOA06fwg4FHTIBlis7keU2wv1CfJw/ELkkRN0KSpmsXblfbwFblZOVhzAIlUSWp5MuagHr1EB9yDnWAHvnIoUtcCTPRk2AOz/zKpkDj26De6fRCrYTrGfaCTKu/v2nn8TE7jMdZlbF3Xga0k4TYDmpbByELDAc2jcSeEscWJDA2KnEzjup/TdSeD9jgFcyXXyUHXZqZRoHTpBheI2099gXdBrguCoRc4J8kACqu59pH4CdTvc77gC7uHmG14qARgNETGOOCNDEfw%2bxNsvSURsfJQDpKkmguof//I1Yb38rSMvlzRtDIust1OEXKT2WP8vcBMkwhSJL1I5TeGqBFnzUBEAANWyMAGoAhTaDqntxUvReohxqd%2bsDTL%2bQiVOL4ZdAqyZuIVMnl1VQdFgCyqaSYR9gWiFMIFS77lk3IHIlTN2pAdHurVTea8ldaID/Sh5bDbA2K6X21AISQH8wFF32JuCc1QDu%2bAJyrOD1KQ/r9Au7pD54MVJpAijoXz748ouZyL%2bBfzyE8q95rOpzN1dEzFA%2b7ODcUmRRIwTcfDLlfm6BgFqQzSpEWOyGBCPNfVjiPsyM5a1pq/cJi4WB3Xe7UMiD06kQ6vkBHCt9wAgB2KAA82vhaQps088xXdav7ToCmtQQiRA8KzJE4fN0sjxHh9keHIiDjEWBm7uF3E03yNlLsb0UyMTGQh1gB0e4xYJsaJmNRVk44THkMqz5yNsd%2bADb3ipfwJIHLQunUobL/i/LcH6AqW3R/xQB3HGagRU1GqDJYEmnSAeZVzoTpP1isrIsxIAvuL25UdcH2TyzrPbV0hgBt9CAR2Or1J5H5oja0qFUoUuXKlKEiexcX1w/VHC8AKluW3cDVQZ4JsDZQJfsw/FO%2bQAfJjBv1b46lajpTFCf5vgsnVCEQ0eW5U/CoA5NYwRoH8AFhkl5GmmlSKDDbMrhOtW9D7YpAobCoDQJj9d6fkaDKN8jPoJ6Vp8FhvL6Yy98SRTYOMl54Vscasjn4ZiAvo33UVbjoA/oXoiM5ezHaedpAlKEQYQ1%2botvhbQpj01g6P3A%2bdS89z7govfyZxIh04rFWIdqcTvA%2bUbg2MdOcChpuuRQdlIDnjqN02eBUNlsrkLft4R6FZ%2bVo0Jfckz/MgLOmMD/%2bndOAy4m4PTx9elvTAO%2b5O3Q1%2bCS%2bcfIOCCAHjGAY9kDsZqJEMA628K8ucfz9XEq/D1%2bQ0JXVT36TfGkD0gK5v85kodclQaytveGLe%2bQ1S2Q1c3RNgUekA57TGb%2bDwgYm5sHK4Lni6osz47REbDAQUcBJCyRQb2fWfL6dqralmEhV5tUbrZZow3J170U/TVNgMkZzxEejtHNe81Qfazl%2bSIvijYXqNrP6tUeZfOaXn0ZSkEAd9/ogJMgwsw9sroZ8nkDJBitdnjdYaiS7/trCOBZ4scf/yg//PA79TWbn/Nm06n6vKc/1lAjwjBQqX6/b55lkvL/B/C8HBfVAdQ787LJrbt2%2bAE%2bqz9WMhTF6mvw90LzddjnR9oAQvLjqR81CCK1UWGSNV%2bP46xda9n1DfhxNsrkv3QjPSdoou/yAAAAAElFTkSuQmCC' /%3e%3c/svg%3e\" width=\"2560\" alt=\"Setting userTask\" data-srcset=\"/assets/static/99.82a2fbd.050fb03d46eba04ed5643db0626604f6.png 480w, /assets/static/99.cbab2cf.050fb03d46eba04ed5643db0626604f6.png 1024w, /assets/static/99.2665e34.050fb03d46eba04ed5643db0626604f6.png 1920w, /assets/static/99.42db587.050fb03d46eba04ed5643db0626604f6.png 2560w\" data-sizes=\"(max-width: 2560px) 100vw, 2560px\" data-src=\"/assets/static/99.42db587.050fb03d46eba04ed5643db0626604f6.png\"><noscript><img class=\"g-image g-image--lazy g-image--loaded\" src=\"/assets/static/99.42db587.050fb03d46eba04ed5643db0626604f6.png\" width=\"2560\" alt=\"Setting userTask\"></noscript>\n이미지 2) User Task 설정\n2. 생성된 task 클릭하여 \"Change element\" 클릭하여 \"User Task\"으로 변경 합니다.</p>\n<p><img class=\"g-image g-image--lazy g-image--loading\" src=\"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 1242 806' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-ed80e749d2215d0e21cbf6eece665dbe'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-ed80e749d2215d0e21cbf6eece665dbe)' width='1242' height='806' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAAqCAYAAAADBl3iAAAACXBIWXMAAAsSAAALEgHS3X78AAAHsUlEQVRo3sVaSY8rVxW2FLFDQQ8kfkTChh0J7NiyAolfwIo9WyTE9NYgFgQlkYIEbNmxCPyBhDwQLy/dr912eyhXuQbXPFf5cL5Tg8vdtrs9pqRPNZ17695zz3yrR1uO5XJJ5ziafs/V/1O%2bHYYhjUYjue5dXV1RnuekaXOyHYesxYKU2UxeTqcKxXEsDa6urinLMtINg5IkocFwKNeg%2beTTfwvdfK4Lret60lcQBKRqGqUpt9MNsm27HUiXEedEd/LNPeaL8QoDXrx4wQNMZaCODDrkicypLEuZtOd55Pk%2bjScTbpQIc6Ioos8/f0WKMqOb/i19/M9/yWRx7zK9ZS3IMEzpD300zDFN6yJStmHtt0pEDxeYbF4UwpkGKa82CJp7HJAAMAv3uAYKbodncub7pi1WPctWdLgHDXfKUjOlrO7z3BIAHuOs8QJDunVdl%2bskqSXgcc4td3LxMS7fp4nzkr5QPZo6KSleXsE9M/gbQyOgOyuS8yvVJyPIKgZ4QUpemJG/hpz8aAPw/AHtU5CTF0A6CvLSJeleTFNWqdlMpZhtxqWPmIXPCIuKARPNI9NJyPYzwcIDUn4Wk2FHLXCPdw3dvrC4bZIWlORLGtkpzfnZjL%2br8bf0IH%2bAuZ8LzaZ3x8DkxRg7PMeoZsDcCsjj1Y1YIsKUKOHnMeuu6GvnyLKUVzKliFcwSsu9ESYl630pfYEJUbaUb8n3eEWirBTINb9ncoKVwHVc07X0BUn7kOkPAb5T1ga4N9Md6k/Y%2bg8%2bIv%2bzn5JlLmg6dsUwemLRLXF7MGQOiy4mEvAIDkGaVQxYlksqmcFRGFDge3LGPb6J65S/Z5kGvWYXncQReexNHHvRwnMdps9PEhf0VMOll6818m7eJ/eTn5A6mdPtlSmD8dn9wXWBAbDujn8YA5o2DQMKeB22BxIzMJPhQouiFMDFwm0u2GIPBgPxMHgv7rimxbgaCT02Ruhppk/6wqcgIXKjRhxz%2bfByWVbEPGAMqssAnPeBMKBWgVNGdscGSMwA2ABMqAIGCqvt8mQdLySb4XgRTz4STxDEh6mALxJQtJEYVnGbz24AKdw1%2bFOExb3p3CfFCEm3E5ovVtDZUt9H9/2%2b0KyEgqjyvRDlm5ubB4b2qQMvantxDFobAAnw45WlXqHYgPJgdFUAH444rHYcl/wAdsCXa88POF9w2fDanEu4tLCd6p0L/fdZagIK2UZQLR2HAhLYSoBq%2bDScaGvG6tS4bwQxCExM1XQ2dg7NdZO0uUEmcgj2QrgGcG2wEQZdQwNGHKv/kKA1I/jyi1seYH6wgduN4ulGcKN%2bLzeqwLFoVWCi2TQcn1kC2jigaPNx0zQlY0ScATx0a50spDWQp68P9G5H2olXfIcNqBkAI6iqM/H1Jgc887nGalGIu4V%2bnmKFH0OrAtcDlTSx%2bslRVn4X0Ld4gXgVvYUh5xds7KDbMHy6YYlBvESdYI0Br4cz8QLnEP1tcQAGEHFghcoRrH9VQXIp5ojzWPe2txcYzxYsosvLqEDrBrevziknWtRo72vxX4sDZoZHI0U/mwFcd4OVBGDVURVSVZUmk4kUKHE/Ho8PCo4OKc8sV9mgR2PFOCsDgvtegIOZ2awygsg5AMMwpIZ4qjIZDpu/ibzf5RTe8UPOME1hNsLwVgJQD8DkJW9PzoQ6ymxUANklJo/MbmUUw40l80MMYtPG4smrXk42q7jj%2blKVRoYJL9RRAV8qQk6AdPdM4L5RFYqTygtg4ihMAs1gm2d3d3eiFoqitMXYY5jQHD5PGqX56%2bvrNUnrKbrPLiomy83IdNOzwXBSDojyNQlAANTdrMAKua4r73A%2bdBOl266p/KDOgH7B3EbyWhUIWDzjA0tdT0ZHBTAA7D1gxRuLjFWBUcRzoFmlY%2bOCpi3EHtFnv98X5nYqQiiIBBcyguXG2H7XBE8RFG3qo/UCiu7SzVBZ89fnzgZ3bV1tsuankIBt/YoKuEF24UBo%2b0RPXQF6lAHwAg4zAKUuvw5Zz4JoXQIuvUm6TaJ6mhmKG8RmyMI9E7hvi89Rkj8qAftGe/tKyQMJuCT3uzH4phwAew%2boPsNlAdtS2Ya2KZp24/ynpMBrRvCSW9Rd7g%2bHQ3FHGDzcH4IebM1Lmcx2HjCrOTeTl8oy0yOLjKL4UQlqdrqbanQrAZdZ/YeWH7E/BoNBgRGSIvNEnDo13lb5xfNmyx30KJTi/NQ0GJL1QAUu8VvKU616syGfF%2bVGyA5S/T9DWVbMRbS3jb4L0K/GVLW9KAMascbe3lyZkDVXSZ9xWjwdkaEp5C3Mi/8v9OUwIErpvyOL/jex6eXUoU/7Kv3nzqAXQ4Pu7JwGVkqDxWZcGyvc7qDbjIz63MYMiy9HBbKiYsAHn7n0lV/06RvPb%2bnZb27p688H9Oy3t4I3f/ma3vzVZnyN8fbvh/Qtxlu/G9A3n/fpqzvo7%2bPZr2/ojZ9f04/%2bqlQG9XJGsEJeM%2bDvrzz69h%2bG9N33RvTue3f0zh9XeFeebcY7jB/8eUI//ptCP/zLlL7/4Zi%2b80ibLr73p5F892f/0FcMuPCPeqvKLF8iMt4X8nMFfprIIVHYat%2b/j%2b7Rw6pk50ZeWeEkRVEkFSSHoi6hAYf2EXfO/wfRQtLToY6MGAAAAABJRU5ErkJggg==' /%3e%3c/svg%3e\" width=\"1242\" alt=\"Setting userTaskPanel\" data-srcset=\"/assets/static/100.82a2fbd.85e072d4887acb4049de19a3bddcf3ff.png 480w, /assets/static/100.2d6add3.85e072d4887acb4049de19a3bddcf3ff.png 1242w\" data-sizes=\"(max-width: 1242px) 100vw, 1242px\" data-src=\"/assets/static/100.2d6add3.85e072d4887acb4049de19a3bddcf3ff.png\"><noscript><img class=\"g-image g-image--lazy g-image--loaded\" src=\"/assets/static/100.2d6add3.85e072d4887acb4049de19a3bddcf3ff.png\" width=\"1242\" alt=\"Setting userTaskPanel\"></noscript>\n이미지 3) UserTask 판넬 설정</p>\n<ol start=\"3\">\n<li>해당 UserTask를 더블클릭하여 우측 판넬에 \"외부 어플리케이션\" 설정 합니다.</li>\n</ol>\n<ul>\n<li>Event Type은 수신 받을 타입인 \"TroubleIssued\"을 설정 합니다.</li>\n</ul>\n<ol start=\"4\">\n<li>\"외부 어플리케이션\" 설정 후 항목 정의 합니다.</li>\n</ol>\n<h4 id=\"311-외부-어플리케이션-설정\"><a href=\"#311-%EC%99%B8%EB%B6%80-%EC%96%B4%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98-%EC%84%A4%EC%A0%95\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>3.1.1 \"외부 어플리케이션\" 설정</h4>\n<ul>\n<li>\n<p>URL</p>\n<ul>\n<li>화면에 대한 정의 하는 부분으로서, 외부 어플리케이션의 정의된 화면에 접근 URL정보 입니다.</li>\n</ul>\n</li>\n<li>\n<p>Event Type</p>\n<ul>\n<li>이벤트 타입을 정의 하는 부분으로서, 이벤트 발생시 어떤한 이벤트를 수신 할 지에 대한 타입의 정의하는 부분 입니다.</li>\n</ul>\n</li>\n<li>\n<p>Event Attributes</p>\n<ul>\n<li>메시지의 속성값 정의 하는 부분으로서, 수신된 메시지를 속성값에 맞게 처리 하기 위해서 정의하는 부분입니다.</li>\n</ul>\n</li>\n<li>\n<p>Event Mapping</p>\n<ul>\n<li>수신된 메시지에서 \"Event Attributes\"에 정의된 부분과 다른 정보를 매핑하는 역할으로서, 수신된 메시지에서 정의된 속성값을 추출하여 저장및 처리를 하기 위한 매핑 부분 입니다.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"32-실행방법\"><a href=\"#32-%EC%8B%A4%ED%96%89%EB%B0%A9%EB%B2%95\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>3.2 실행방법</h3>\n<h4 id=\"321-프로세스-정의체계도-정의\"><a href=\"#321-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4-%EC%A0%95%EC%9D%98%EC%B2%B4%EA%B3%84%EB%8F%84-%EC%A0%95%EC%9D%98\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>3.2.1 프로세스 정의체계도 정의</h4>\n<ol>\n<li>\"프로세스 정의체계도\"탭으로 이동 합니다.</li>\n<li>Mega프로세스, Major프로세스, Sub프로세스 을 분류를 합니다.</li>\n<li>Sub프로세스 에서 사용할 프로세스를 저장 합니다.\n<img class=\"g-image g-image--lazy g-image--loading\" src=\"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 1404 737' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-82ef17c8565eb321edf8998225d13241'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-82ef17c8565eb321edf8998225d13241)' width='1404' height='737' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAAiCAYAAADvVd%2bPAAAACXBIWXMAAAsSAAALEgHS3X78AAAH1klEQVRo3tVZW1MbyRXWP8lDfkx%2bTN5SlTxk87B5cCW7CYm3bBYhhO7SaK6am644lctbXpLyg9fe8mUNGFgEtsBgxEXiyzk902KsHYEA4ZRV9en09PT169PnnO5JNJsNNJtNdDodgZWVFbTb7ZGs1%2bsCjUYDpu3Cclw0Kd0YQ7RcNI8ltz/%2b7jqQdWUfcc/jGB%2bTlL7vwzQt8ez5dSR%2b%2basvsJjOYjG5gFQqhfmHD5HL5fDN/ftIJpOjyjxpiwiwXR%2be58G2HeiGgeRiWrzntOf54rlWs6FUVRiGKbCcyaHVal464GnAY6lUKjBMk/oz4U8o59PEmHRN02Fa1kcL4LoujXEJllUT%2bYnffvkH5ItlqKqKfD6PpdQSSqWSSOu6PmpUElBzPGooyOPGuJMGs%2bl5ogNV1UKCbPGe0yYNmDu7qQZEYdGEHMcR7YpJTSCBNVv2z%2blRG/TOqtXEIvFzokNqzqvD6i63QCdMt1utkbqz5Mmrpg2z5hKckBA/eLZdIW2POqByXNYKUSOtEe9nAO5PtGt7V5aV/Y/ywnFa4TvdcpDgfeB4DB8uQUrPD9I1t05qT6yGBGhUyaE6bp2e6b3N9SPPBhFjUAeG7VyA8kyRd/OJy7pB%2b86lbY3KhuW4jlgIMZ%2bAQJNsmU75iV8/1PGgZGOh4uB%2bwRZpln/K1ZBSHBR0FzmNCttc2RMrn88XsJhKo1Su0P7OIpPNYf7bJMoVJVD1Wxi8WYO3A2t3uVzG0tKS2NqKoqBarQo7lvg6W0O66ggsEgmLNGmeOBOSUV2UTQ9Fg1XGD9SaGOWJ5vLFUBYEEZlsXhi%2bRmhwWGME6hE5Stc/KZq0lTVNQ6FQEBNn28aSbUSi3WqQDWiJlWNb0AqNVTMcqB%2bCDYk0gmwjHq108LdHHZJtUWel0yabEbX0PpqEVuNCMjj/ph6gcQPyRl6sGdi5i7m2AiPIe53ZYUvNFpYhV5CtvbScUTfoWiqKmSQyqXmopQyatgpbK8LVi2i4FnzPhWsq0DUFiqpAJVmpBvCsKurUZyPa/i3jgevWiSLBgQG7QIP8OJPAiKs0coNEgF/TUM4sYDn5AGohjY6roUTP5cw8HLMKy9ChV3LkTnNYzJKNyOeQyWWwlM1ALWdg6Nqor2lRI9fFYx0PbG6LBP%2bxy5OqIf31OAkXcQCptGui42l4VDfRpsm3HBXVQoomncHz75/i6bNnePrdEzx7%2bgQvnz/D9yRXf3iJN2uvsbr6Gmtra1hbXye5HsjLQGU3Njbx%2bPFjQUJcdHcrAphVVnsOXC4LNS%2b2gAeHjIdKARCDIzKLgooKWdZ2u4N%2bv4/V1z%2bg%2b%2bMW1mnwOztddLe3cT4c4ja/w8NDsVVnrQWjLRBV/UkawL6VYwNF1fHV3H189ee/IklhdLEaPKu6JQZ7THPdO6FBnwU4Owf69Nc/G%2bLolHAyIDkdPlDZAdXv9XoiDJYR4LQ24EoCeOVlrMyNj0LMiRpARtOwkK%2bQIVQ0go4CpX9/74%2bUb%2bLDAFjv9bG930d3/wjd931s9I6wtXeMTZLb70/w9miA3Q/ToXtwgo2DIXbfMQFlCtK82WoAH3g4ti4Wi8hkMiJYYFImG0FPqKFNkZSItd1AKkpVuLsDWvHdvUO839nGzuYW9rpdgf2dHbzd2sLx4cH1dH94hrf9c3TfhgS4MyYg6heln7zKBpi05/O08smSgYWigaWyga%2bTeRS1Gk5JXd/sn6J7OMB2HA4G2CKWfpwSXLZ7BLyjLcDR3Mw1YG5uToSG8jTIUm6JiQTQUbJABKTLOhaLOnKU/iZFbk8LbMD5%2bfkUS3s%2blQLItvb2AgK8WROwsLAgQkMGd8DxwEdaMHYfMDoO%2b0GEx2gQ2Lc3KV8OmjEkyz8uB4OBkNFyV4F/vd4dETB%2bTq9HzvaxNoAIaEZj%2bzC%2bZwK5Dv/OBkPy3Rt48eKFkK9evcLm5qbw6aurq9jd3f1ohcUkJ2jNnRNw7949YQC58XQ6jeXlZXFouJqAj11RlAAeNK90HM4ESBOG4cRZO0INids%2bd05AcIXkC7WXiIsHrkvAtL/zmMl%2bUgL4WMiNsiHkledgQ5IgO3DI5fG%2blzc90xAwaS8/%2bHcPv2lv44t/7OHNk%2b%2bAfzk4%2b7uN4dpzQYbUhqgduVMCpM9n688k8ESiXkBeJE5DANe7SgN%2bUXyDn/3lJX6%2bsIX/NtrA8pc4mf8dhv/5Z%2bj3h7EasL%2b/f3dGkBuKiwOuswU4lGaiTk9PxapNwrsPZ1jrnZB/P8Xp8TGG73sYEIYnx7Hl2W7wj43ondmAy%2b7cGzFusBnzPogGldF1E2%2blOGhVBaamwFCDshVVC8DpCXW4PZ48a5k8DM3sLDDNhcJVXkAaUj6u8oDZlkhwcCVRKOSRy19A5EXe539SPmiDvRRvUQ7Z4xbo/0bA%2bKmRSZAHqllj/Bg8swuRqS8Wr9gCN72zu8n93kxtwE8z67F3ddNowKfCTK/E%2bMOIhOvzDXADPr2I5jE43OUPo%2bMEfGoSZjl5QUDJ8hDARZlkjo602aop0jKPpR5%2bF4gj4HOFuBUumq4ggGXFruPbXAVzC2mRx5NPqQ6SigNDfFKa7AU%2bVyQKNHGevJBCA2w641eFZBKyuotlzYHmRAhoNj771R9tAdX2cAFfSI2kJtNOIC2vLibPHxuFfeAPqJ8z/Lq43/wfduk2wbPh0jgAAAAASUVORK5CYII=' /%3e%3c/svg%3e\" width=\"1404\" alt=\"Sub프로세스\" data-srcset=\"/assets/static/102.82a2fbd.9feedda36d8fec18dc666c56ad4e20f3.png 480w, /assets/static/102.cbab2cf.9feedda36d8fec18dc666c56ad4e20f3.png 1024w, /assets/static/102.8df89b3.9feedda36d8fec18dc666c56ad4e20f3.png 1404w\" data-sizes=\"(max-width: 1404px) 100vw, 1404px\" data-src=\"/assets/static/102.8df89b3.9feedda36d8fec18dc666c56ad4e20f3.png\"><noscript><img class=\"g-image g-image--lazy g-image--loaded\" src=\"/assets/static/102.8df89b3.9feedda36d8fec18dc666c56ad4e20f3.png\" width=\"1404\" alt=\"Sub프로세스\"></noscript>\n이미지 5) Sub프로세스 에서 정의된 프로세스 저장</li>\n</ol>\n<h4 id=\"322-프로세스-실행\"><a href=\"#322-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4-%EC%8B%A4%ED%96%89\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>3.2.2 프로세스 실행</h4>\n<p><img class=\"g-image g-image--lazy g-image--loading\" src=\"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 1399 744' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-a7648cccc272a41d9aee632b97c30e9d'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-a7648cccc272a41d9aee632b97c30e9d)' width='1399' height='744' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAAiCAYAAADvVd%2bPAAAACXBIWXMAAAsSAAALEgHS3X78AAAIt0lEQVRo3tVayXbcyBHkn/lTfPYf%2bA9889kH3eeiu3zxG9GSRqI51EgiKZJN9r5gbyyFfQtnJoBWk%2bwmm2pq7MFTsoACulAVlRkZVdBBXdfI8xwPHfxMd/hRhjQvV/XrVlaVlFVVb7y/qW5XQ/t7brssq7at5rqq71v3u6qqbr2XD6VCZFkG7uZBHCf4%2bz9%2bwmA0xaffPuL87AwfT05wfn6O46MjXF9f3wIhiHMUZY0kSaksMZtr6A/Hct/3A0RRjPOLHvKikHv8oulsAdOy9wKge3%2bcJDAMAwENIqR3bWpTAKD6LMuh6eY9AIajCSbTuZwf8ED%2b%2bfMv8HwFz/Ogaxq0BXXYNOE4DlJ64V0AsoI9oLnm38dxLNeMNlsYRjI9Cf22pus0zR71sl2PkkDn93Eps/sAWNwnfu7uUdDkRNRGQZ50sMtL6zUAVJLDDVMJBY9KlRQIqM5r69i4jq8ZrKYul3OuW3/ue4zbkXdy26v2H37%2b23W%2bqgvTEh6d7wZA61ICQNtgRsCyRfQnyav2ukZM51FaIKPJSYta7tE/Kfmaz2PikJBA%2b18ZT2IQMyApDthFXr58Ke4%2bm80wGAwwnU4xHA5xcXFB7hx%2bCwEyRs50XPSu%2bzg7v4RtO9ANE18ve7jpD7FcLrHQdFxcXuPrBdeNcNXry/PXNwNcUen5Pn7voyS3Z17j8B70%2b7Ask7jExAHHEQ%2bW45VjiwfcWRAEEi/rHMAekGYFPRvJM0VBnJClch5FEcV6JnVhqOg6pPhPhHW5fb6vlFq1%2bVzH4wQKIUYVNuzPfZEyfUoItDEgLhQXcPwcupNgGWRY%2bilcRdygCrouYfsllqpqjK6b%2bkJKV5XyW9tLybK9zHLTtZRY75TGb9ejAYAZmlOL67qSCXiW7iLYNRKmTGa5vHxhKbqmzECmuKS0NBmeI1N9pEEfidej1OgQSdYUc0xcpZja07iNMKlgEQhZXj0yyC2apNUrB11qYXfnEGD3SNN0o3t1APghZQCa8cFsCdsYILr8GwJnDMsMEBi/IdDeITLfo3SPECynRDpElsQdUVo9m8VZJd6XF497wDZQBIBdXGcjAGGBq6GF%2bfAjwl//DH3wCaOejdL7Fc7kDZzpO%2bTuf2DNh5iOlHQ4TMpns5hAcPxnAKATBszeTGQPSddvAOSEfo6F6YsrhimlP%2bK1NI%2bRe19Qq1NU6gyl/wnK12BoiQDAnb5n2dONPSDJa%2blDnj8DAKLwKASYGXfzgFzQn1uheEJDbg0othvBWqrGXAWHyG46Cdrn8g22rf5h4/aMZbq/B3AaZPITnU0c0KWqu4uITQDMTEVMX8g5M7sT5ML2K1NNthiPfLln07nlF0RefF5I3fpvV%2bc7GIPNWWhvANj9r66uJAxYCE0mE9EFnYZ%2bNARIF8RZvd1dKV4tg7RApKBPz0gS9lFGNyhUjxYzvijGjh9IQO4WBj8iBLaJi20k6EcVLvszzHWHOoMHCWs%2bDWHQytDTjuHN35C9RWp/gO8apMgyXF4N8ObdewofElPEJ78rCfLMv3r1iiStjfF4jF6vJ7J423q%2bA8ByY/SGtGp0AvGArR2lGbOXOWY3I2TLI9iSId4iselcX2B04%2bPL6SV%2bPjyEYXsPtnW33WcBgC946csEyPmfOWDd/Td6AK2qLm9mEgLc4YdzPHWWPCRJfckQlToXy73PRLwOeJHskZLSdV9CgAfXtLdum3WAwzpg3xDgwfLihwHgwXfrAD7fygEEwBUBMJy7QmgmqcLHjBmbleOCiFNKMmOZiJqbaxEmUwU7YJIsYbgF/aazbK2d9rz93cKK9/cABuD4%2bFgygaZpQoIMiGVZWwEIxAOmmJuN%2b6sdxcvdWZQ6mkmXBjMZO5TeYli2iSh0aRLI1JLIkwiUtEYng0OS1RSBwhXPJoR2IcLu6LLAggav0Sw%2bScLygNdMYpnY3CWtYJoxDZAyxfgEBanJ0v%2bIyjtG6M%2bbECJXZ7EVJfScfUntNakzz8v9dYCu65L3eS%2bASZA54S4HJO3W2HoWYBK0lsHOxLWNzBiA8cDH6GqO5ewDtMFraP1Dsn/B0UfQtRimoTCfFxidvIJ6%2bydae1zDCUGLoWJ/EuxIj0mQB9rt360D0D2zLoR0O1zN5D4A%2bCRshgOHFlOmzH5BM5%2b7xyiWlCrtMZFkCZ8Ij0uPJLu3eE/6IyYPKPb3gG1r5vXB3wuBqAHAcKKViPmeFd16CNhWQm5eQHkLcXsxb4YgZA9bE0g0N/R68bpnS4PbFj4PrQV4KTrW/Dss/XSz/CYLjGm9YPEmC2kGbVmSFVI2mWA9mySUBaJ2PyL5sSS4iQzXPcAkMZTsEf9dCCzdxgPiLMVsTKvIsIcivEapLmldYlOmwCr3MxEq8Qj8%2bCywFQAiQV7FjWY23CBZkeB3hUBLgoZOKZBktT1t5fLiHYLFv%2bE7xAGqQkCjdgPAGn9GePpXChEdjqr354CnfZ66DUB/YmDpx3tlgU75WXaKyfUcSn8Pl9YKzvQN3Nkh7MUQ2oKygE7iaZ5hek7EePIXBO6MAODtvOJHeMC3b3F3j3UOsNxE5Gv0nRsbt1Z3sqGSoAi%2btnKZy1OEgSH3kqJGWpKRx7MQ4jruQ7avFC7oT0CdUK0FrN3Jq9iCrJS6kOuzSj58RK0SZEKak6z9ns2MjRY0S2xeZFlMcq1xnHf3GmPva/YkmQiLHTngPqG3m6IRITgh9p1S41MqFyRwPo8MfBmbcs71Y87TpPl9idtcvg5nZAl/FUqf2ajNlMDubPM7CvKaQvqwTbHusj0uAMSE4IwGOaeY5lKPa5yODZz0SOvzpkdY4MxMceVkUHkDQPNx9P/jeOrXZRZ0vAXQfM5nAPJmlmcrK8gjMgxsWqERO89aYNhL/KwDoMIf7ajrps9HRx/w4sULHL5%2bLZ/wDxgF9oJ1Y8JJ%2bP8AFHV7XclHT%2bEL%2bSqbEXk1bvhHMf5gywsq0/EwGE8xWxjykfS/XgQfMCkVxCYAAAAASUVORK5CYII=' /%3e%3c/svg%3e\" width=\"1399\" alt=\"실행\" data-srcset=\"/assets/static/103.82a2fbd.2aa912193a602475af1cecad89225b8f.png 480w, /assets/static/103.cbab2cf.2aa912193a602475af1cecad89225b8f.png 1024w, /assets/static/103.1456b62.2aa912193a602475af1cecad89225b8f.png 1399w\" data-sizes=\"(max-width: 1399px) 100vw, 1399px\" data-src=\"/assets/static/103.1456b62.2aa912193a602475af1cecad89225b8f.png\"><noscript><img class=\"g-image g-image--lazy g-image--loaded\" src=\"/assets/static/103.1456b62.2aa912193a602475af1cecad89225b8f.png\" width=\"1399\" alt=\"실행\"></noscript></p>\n<ol>\n<li>Sub프로세스에 정의된 프로세스를 클릭하면, 해당 정의된 프로세스를 불러오게 됩니다.</li>\n<li>우측 상단에 플레이 버튼을 클릭하여 프로세스 실행합니다.</li>\n</ol>\n<h2 id=\"4-예제-영상\"><a href=\"#4-%EC%98%88%EC%A0%9C-%EC%98%81%EC%83%81\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>4. 예제 영상</h2>\n<p><a href=\"https://youtu.be/wZ3VW7YF98g\" target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"http://img.youtube.com/vi/wZ3VW7YF98g/0.jpg\" alt=\"이벤트기반 연동\"></a></p>\n","sidebar":"getting-started","next":"","prev":"","headings":[{"depth":1,"value":"외부서비스와 BPM연동","anchor":"#외부서비스와-bpm연동"},{"depth":2,"value":"1. 예제 어플리케이션","anchor":"#1-예제-어플리케이션"},{"depth":3,"value":"1.1 연동 원칙","anchor":"#11-연동-원칙"},{"depth":3,"value":"1.2 Req/Res 방식과 Pub/Sub 방식의 차이점","anchor":"#12-reqres-방식과-pubsub-방식의-차이점"},{"depth":2,"value":"2. Message broker","anchor":"#2-message-broker"},{"depth":3,"value":"2.1 어플리케이션(Publisher)","anchor":"#21-어플리케이션publisher"},{"depth":3,"value":"2.2 BPM(Subscriber)","anchor":"#22-bpmsubscriber"},{"depth":2,"value":"3. 프로세스 모델링","anchor":"#3-프로세스-모델링"},{"depth":3,"value":"3.1 외부 어플리케이션 설정","anchor":"#31-외부-어플리케이션-설정"},{"depth":4,"value":"3.1.1 \"외부 어플리케이션\" 설정","anchor":"#311-외부-어플리케이션-설정"},{"depth":3,"value":"3.2 실행방법","anchor":"#32-실행방법"},{"depth":4,"value":"3.2.1 프로세스 정의체계도 정의","anchor":"#321-프로세스-정의체계도-정의"},{"depth":4,"value":"3.2.2 프로세스 실행","anchor":"#322-프로세스-실행"},{"depth":2,"value":"4. 예제 영상","anchor":"#4-예제-영상"}]},"allMarkdownPage":{"edges":[{"node":{"path":"/api-customizing/script-task/","title":"[Modeling] ScriptTask"}},{"node":{"path":"/api-customizing/transaction-listener/","title":"uEngine5 트랜잭션 리스너"}},{"node":{"path":"/api-customizing/new-activity/","title":"새로운 액티비티 타입 만들기"}},{"node":{"path":"/api-customizing/migration/","title":"uEngine3.x 에서 uEngine5 로의 마이그래이션"}},{"node":{"path":"/api-customizing/message-listener/","title":"[API] Message Listener API"}},{"node":{"path":"/api-customizing/external-service/","title":"외부서비스와 BPM연동"}},{"node":{"path":"/api-customizing/api-reference/","title":"uEngine5 API Reference"}},{"node":{"path":"/api-customizing/create-project/","title":"uEngine5 기반 프로젝트 만들기"}},{"node":{"path":"/getting-started/soa-architecture/","title":"SOA (MSA) 아키텍처 예제"}},{"node":{"path":"/getting-started/process-workflow/","title":"사람간의 프로세스 Workflow"}},{"node":{"path":"/getting-started/","title":"모델링 툴의 사용법"}},{"node":{"path":"/bpm-engine/resource-manager/","title":"Resource Manager"}},{"node":{"path":"/bpm-engine/instance/","title":"Instance"}},{"node":{"path":"/bpm-engine/introduction/","title":"기본 소개"}},{"node":{"path":"/bpm-engine/execution/","title":"실행하기"}},{"node":{"path":"/bpm-engine/definition/","title":"Definition"}},{"node":{"path":"/bpm-engine/activity/","title":"Activity"}},{"node":{"path":"/bpm-concept/workflow/","title":"워크플로우"}},{"node":{"path":"/bpm-concept/workflow-management-system/","title":"워크플로우 관리 시스템과 RTE BPM"}},{"node":{"path":"/bpm-concept/open-source/","title":"오픈소스 BPMS uEngine 소개"}},{"node":{"path":"/bpm-concept/facebook/","title":"Facebook group"}},{"node":{"path":"/bpm-concept/example-video/","title":"Example Video"}},{"node":{"path":"/bpm-concept/business-process/","title":"비즈니스 프로세스와 BPM"}}]}},"context":{}}