{"hash":"0767c45a16c49529871bddd26c96cd9b13d7870b","data":{"markdownPage":{"id":"bcbb26d193e3b72d880eb18e14dc6140","title":"uEngine6 기반 프로젝트 만들기","description":"","path":"/api-customizing/create-project/","timeToRead":2,"content":"<h1 id=\"uengine6-기반-프로젝트-만들기\"><a href=\"#uengine6-%EA%B8%B0%EB%B0%98-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>uEngine6 기반 프로젝트 만들기</h1>\n<p><strong>먼저, uEngine-default 프로젝트를 복제한다:</strong></p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> clone https://github.com/uengine-oss/uEngine6-bpm</code></pre>\n<p><strong>복제한 uEngine-default 프로젝트를 해당 사이트의 프로젝트 명으로 전환한다:</strong></p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">mv</span> uEngine6-default someproject\n<span class=\"token builtin class-name\">cd</span> someproject</code></pre>\n<p><strong>pom.xml 내의 프로젝트에 대한 설명 정보도 바꿔 준다:</strong></p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token operator\">&lt;</span>groupId<span class=\"token operator\">></span>com.company<span class=\"token operator\">&lt;</span>/groupId<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>artifactId<span class=\"token operator\">></span>bpm-project<span class=\"token operator\">&lt;</span>/artifactId<span class=\"token operator\">></span></code></pre>\n<p><strong>그런다음 빌드를 실시한다:</strong></p>\n<pre class=\"language-bash\"><code class=\"language-bash\">mvn spring-boot:run</code></pre>\n<h2 id=\"설정-변경과-커스터마이징\"><a href=\"#%EC%84%A4%EC%A0%95-%EB%B3%80%EA%B2%BD%EA%B3%BC-%EC%BB%A4%EC%8A%A4%ED%84%B0%EB%A7%88%EC%9D%B4%EC%A7%95\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>설정 변경과 커스터마이징</h2>\n<p><strong>WebConfig.java</strong></p>\n<pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>uengine<span class=\"token punctuation\">.</span>five</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token annotation punctuation\">@EnableWebMvc</span>\n<span class=\"token annotation punctuation\">@Configuration</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">WebConfig</span> <span class=\"token keyword\">extends</span> org<span class=\"token punctuation\">.</span>uengine<span class=\"token punctuation\">.</span>social<span class=\"token punctuation\">.</span>uEngine6WebConfig <span class=\"token punctuation\">{</span>\n\n\n    <span class=\"token doc-comment comment\">/**\n     * Uncomment and implement if you want to change default storage\n     */</span>\n<span class=\"token comment\">//    @Bean</span>\n<span class=\"token comment\">//    @Override</span>\n<span class=\"token comment\">//    public Storage storage() {</span>\n<span class=\"token comment\">//        CLOBStorage storage = new CLOBStorage();</span>\n<span class=\"token comment\">//        storage.setDataSource(dataSource());</span>\n<span class=\"token comment\">//        storage.setTableName(\"bpm_def\");</span>\n<span class=\"token comment\">//</span>\n<span class=\"token comment\">//        return storage;</span>\n<span class=\"token comment\">//    }</span>\n\n\n    <span class=\"token doc-comment comment\">/**\n     * Uncomment and add ActivityFilters like following example\n     */</span>\n<span class=\"token comment\">//    @Bean</span>\n<span class=\"token comment\">//    public ActivityFilter exampleActivityFilter1() {</span>\n<span class=\"token comment\">//        return new ExampleActivityFilter1();</span>\n<span class=\"token comment\">//    }</span>\n<span class=\"token comment\">//</span>\n<span class=\"token comment\">//    @Bean</span>\n<span class=\"token comment\">//    public ActivityFilter exampleActivityFilter2() {</span>\n<span class=\"token comment\">//        return new ExampleActivityFilter2();</span>\n<span class=\"token comment\">//    }</span>\n<span class=\"token comment\">//</span>\n\n    <span class=\"token doc-comment comment\">/**\n     * Uncomment and return an implementation of ProcessInstance. default is JPAProcessInstance\n     */</span>\n<span class=\"token comment\">//    @Bean</span>\n<span class=\"token comment\">//    @Scope(\"prototype\")</span>\n<span class=\"token comment\">//    @Override</span>\n<span class=\"token comment\">//    public ProcessInstance processInstance(ProcessDefinition procDefinition, String instanceId, Map options) throws Exception {</span>\n<span class=\"token comment\">//        return new CustomProcessInstance(procDefinition, instanceId, options);</span>\n<span class=\"token comment\">//    }</span>\n\n    <span class=\"token doc-comment comment\">/**\n     * Uncomment and return an real datasource not the H2\n     */</span>\n\n    <span class=\"token annotation punctuation\">@Bean</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">DataSource</span> <span class=\"token function\">dataSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">//In classpath from spring-boot-starter-web</span>\n        <span class=\"token keyword\">final</span> <span class=\"token class-name\">Properties</span> pool <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Properties</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        pool<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"driverClassName\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"com.mysql.jdbc.Driver\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        pool<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"url\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"jdbc:mysql://localhost:3306/uengine?useUnicode=true&amp;characterEncoding=UTF8&amp;useOldAliasMetadataBehavior=true\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        pool<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"username\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"root\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        pool<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"password\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        pool<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"minIdle\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>tomcat<span class=\"token punctuation\">.</span>jdbc<span class=\"token punctuation\">.</span>pool<span class=\"token punctuation\">.</span></span>DataSourceFactory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">createDataSource</span><span class=\"token punctuation\">(</span>pool<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RuntimeException</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span></code></pre>\n<p><strong>위의 예제는 각각 저장 매체, 액티비티 필터 설치, 접속데이터베이스 (기본은 H2 DB) 변경에 대한 샘플이다.</strong></p>\n<ul>\n<li>예를 들어, 저장매체를 변경한다면,</li>\n</ul>\n<pre class=\"language-java\"><code class=\"language-java\">    <span class=\"token annotation punctuation\">@Bean</span>\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Storage</span> <span class=\"token function\">storage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">AmazonS3Storage</span> storage <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AmazonS3Storage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        storage<span class=\"token punctuation\">.</span><span class=\"token function\">setAmazonS3Bucket</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"bucketName\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        storage<span class=\"token punctuation\">.</span><span class=\"token function\">setAwsAccessKey</span><span class=\"token punctuation\">(</span><span class=\"token constant\">ACCESS_KEY</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        storage<span class=\"token punctuation\">.</span><span class=\"token function\">setAwsSecretAccessKey</span><span class=\"token punctuation\">(</span><span class=\"token constant\">SECRET</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n        <span class=\"token keyword\">return</span> storage<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span></code></pre>\n<ul>\n<li>사용할 수 있는 저장매체로는 LocalFileStorage, AmazonS3Storage, CouchbaseStorage 등을 사용할 수 있고, 직접 구현하여 CLOB 기반 저장소, git 버전관리 기반 저장소 등을 만들어 쓰면 된다.</li>\n<li>액티비티 필터는 하나 이상을 선언해서 쓰면 된다, 호출 순서는 Spring에서 알아서 정할 것이기 때문에 (리플랙션으로) 잘 모르겠다. (헐) :</li>\n</ul>\n<pre class=\"language-java\"><code class=\"language-java\">    <span class=\"token annotation punctuation\">@Bean</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ActivityFilter</span> <span class=\"token function\">exampleActivityFilter1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ExampleActivityFilter1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Bean</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ActivityFilter</span> <span class=\"token function\">exampleActivityFilter2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ExampleActivityFilter2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span></code></pre>\n<ul>\n<li>액티비티 필터가 뭐하는 거냐고 묻는다면 모든 프로세스와 액티비티 실행시 거쳐가는 리스너의 개념으로 (프로세스 실행에 제약을 줄 수 있는 권한은 없으므로 어째보면 정확히 필터는 아니고 리스너에 가깝다. 처음에 네이밍을 잘못했네 이사람아..)</li>\n</ul>\n<pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>uengine<span class=\"token punctuation\">.</span>kernel</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token doc-comment comment\">/**\n * <span class=\"token keyword\">@author</span> Jinyoung Jang\n */</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">ActivityFilter</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span>Serializable</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\">//run-time</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">beforeExecute</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Activity</span> activity<span class=\"token punctuation\">,</span> <span class=\"token class-name\">ProcessInstance</span> instance<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">afterExecute</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Activity</span> activity<span class=\"token punctuation\">,</span> <span class=\"token class-name\">ProcessInstance</span> instance<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">afterComplete</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Activity</span> activity<span class=\"token punctuation\">,</span> <span class=\"token class-name\">ProcessInstance</span> instance<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">onPropertyChange</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Activity</span> activity<span class=\"token punctuation\">,</span> <span class=\"token class-name\">ProcessInstance</span> instance<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> propertyName<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span> changedValue<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token comment\">//deploy time</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">onDeploy</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ProcessDefinition</span> definition<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n","sidebar":"getting-started","next":"","prev":"","headings":[{"depth":1,"value":"uEngine6 기반 프로젝트 만들기","anchor":"#uengine6-기반-프로젝트-만들기"},{"depth":2,"value":"설정 변경과 커스터마이징","anchor":"#설정-변경과-커스터마이징"}]},"allMarkdownPage":{"edges":[{"node":{"path":"/process-gpt/user-guide/","title":"주요 기능"}},{"node":{"path":"/process-gpt/voice-chat/","title":"음성 기반 ProcessGPT"}},{"node":{"path":"/process-gpt/tutorial-lv5/","title":"멀티플 인스턴스 뉴스레터 프로세스"}},{"node":{"path":"/process-gpt/tutorial-lv4/","title":"ERP 데이터 연동을 통한 재고 관리"}},{"node":{"path":"/process-gpt/tutorial-lv3/","title":"조건 분기 설정과 피드백 반영"}},{"node":{"path":"/process-gpt/proecss-gpt-test/","title":"This is a H1"}},{"node":{"path":"/process-gpt/tutorial-lv2/","title":"AI 에이전트를 활용한 제안서 작성"}},{"node":{"path":"/process-gpt/simulation/","title":"프로세스 시뮬레이션 & 피드백 수정"}},{"node":{"path":"/process-gpt/tutorial-lv1/","title":"프로세스 생성과 실행"}},{"node":{"path":"/process-gpt/process-gpt-install/","title":"로컬 설치 가이드"}},{"node":{"path":"/process-gpt/process-marketplace/","title":"마켓플레이스"}},{"node":{"path":"/process-gpt/multi-agent/","title":"멀티 에이전트"}},{"node":{"path":"/process-gpt/","title":"Process-GPT 소개"}},{"node":{"path":"/process-gpt/feedback-system/","title":"피드백 시스템"}},{"node":{"path":"/process-gpt/browser-use/","title":"Browser Use 에이전트"}},{"node":{"path":"/process-gpt/ai-chat-guide/","title":"AI 기반 음성 채팅"}},{"node":{"path":"/process-gpt/a2a-system/","title":"A2A"}},{"node":{"path":"/process-gpt/agent-knowledge/","title":"에이전트 지식관리"}},{"node":{"path":"/process-gpt/admin-guide/","title":"프로세스 컨설팅 AI 및 관리"}},{"node":{"path":"/process-example/sub-process/","title":"서브 프로세스를 활용한 프로세스 작성"}},{"node":{"path":"/process-example/","title":"여신관리 프로세스"}},{"node":{"path":"/process-example/call-activity/","title":"콜 액티비티(Call Activity)의 활용"}},{"node":{"path":"/pal-edition/save-image/","title":"프로세스 정의 PDF 저장 방법"}},{"node":{"path":"/pal-edition/process-definition-map/","title":"프로세스 정의 체계도 작성 방법"}},{"node":{"path":"/pal-edition/process-definition-edit/","title":"프로세스 편집"}},{"node":{"path":"/pal-edition/index2/","title":"BPMN PAL 매뉴얼"}},{"node":{"path":"/pal-edition/phase/","title":"페이즈(Phase)란?"}},{"node":{"path":"/pal-edition/","title":"PAL 개요 및 목적"}},{"node":{"path":"/getting-started/soa-architecture-message/","title":"SOA (MSA) 아키텍처 예제 - Message"}},{"node":{"path":"/getting-started/soa-architecture/","title":"SOA (MSA) 아키텍처 예제"}},{"node":{"path":"/getting-started/process-workflow/","title":"사람간의 프로세스 Workflow"}},{"node":{"path":"/getting-started/soa-architecture-event/","title":"SOA (MSA) 아키텍처 예제 - Event"}},{"node":{"path":"/getting-started/process-monitoring/","title":"프로세스 실행"}},{"node":{"path":"/getting-started/process-definition/","title":""}},{"node":{"path":"/getting-started/multiple-instance/","title":"멀티플 인스턴스"}},{"node":{"path":"/getting-started/","title":"실행환경 구성"}},{"node":{"path":"/getting-started/modeling-tools/","title":"모델링 툴의 사용법"}},{"node":{"path":"/getting-started/conditional-branch/","title":"조건 분기 처리"}},{"node":{"path":"/getting-started/form-mapping/","title":"폼 매핑"}},{"node":{"path":"/getting-started/form-definition/","title":"폼 관리"}},{"node":{"path":"/getting-started/database-table/","title":"테이블 정의"}},{"node":{"path":"/bpm6-started/script-task/","title":"[Modeling] ScriptTask"}},{"node":{"path":"/bpm6-started/multiple-instance/","title":"멀티플 인스턴스"}},{"node":{"path":"/bpm6-started/form-mapping/","title":"데이터 매핑"}},{"node":{"path":"/bpm6-started/bpm6-modeling/","title":"구성요소"}},{"node":{"path":"/bpm6-started/","title":"모델링 툴의 사용법"}},{"node":{"path":"/bpm6-started/form-definition/","title":"폼 관리"}},{"node":{"path":"/bpm6-started/conditional-branch/","title":"조건 분기 처리"}},{"node":{"path":"/bpm6-started/bpm6-external/","title":"외부 서비스 연동"}},{"node":{"path":"/bpm6-started/bpm6-execution/","title":"프로세스 실행"}},{"node":{"path":"/bpm6-intro/","title":"소개하기"}},{"node":{"path":"/bpm6-intro/example-video/","title":"기능 데모 영상"}},{"node":{"path":"/bpm6-intro/bpm6-timer/","title":"타이머 이벤트"}},{"node":{"path":"/bpm6-intro/business-process/","title":"BPM과 비즈니스 프로세스"}},{"node":{"path":"/bpm6-intro/bpm6-introduce/","title":"소개하기"}},{"node":{"path":"/bpm6-deploy-config/bpm6-system-integration/","title":"uEngine6 BPM 배포 설정"}},{"node":{"path":"/bpm6-intro/bpm6-animation/","title":"프로세스 애니메이션"}},{"node":{"path":"/bpm6-install/","title":"설치 및 접속 방법"}},{"node":{"path":"/bpm6-deploy-config/","title":"배포하기"}},{"node":{"path":"/bpm6-install/bpm6-account/","title":"계정 관리"}},{"node":{"path":"/bpm6-deploy-config/uengine3-migration/","title":"uEngine3.x 마이그레이션"}},{"node":{"path":"/bpm6-contact/","title":"라이센스 및 문의하기"}},{"node":{"path":"/bpm6-api/bpm6-transaction-listener/","title":"uEngine6 트랜잭션 리스너"}},{"node":{"path":"/bpm6-api/","title":"API Reference"}},{"node":{"path":"/bpm6-api/bpm6-message-listener/","title":"Message Listener API"}},{"node":{"path":"/bpm-engine/resource-manager/","title":"Resource Manager"}},{"node":{"path":"/bpm-engine/execution/","title":"실행하기"}},{"node":{"path":"/bpm-engine/introduction/","title":"기본 소개"}},{"node":{"path":"/bpm-engine/instance/","title":"Instance"}},{"node":{"path":"/bpm6-admin/","title":"관리자 페이지 기능 및 소개"}},{"node":{"path":"/bpm-engine/definition/","title":"Definition"}},{"node":{"path":"/bpm-engine/activity/","title":"Activity"}},{"node":{"path":"/bpm6-admin/bpm6-file/","title":"데이터 관리 - 파일"}},{"node":{"path":"/bpm6-admin/bpm6-database/","title":"데이터 관리 - 데이터베이스"}},{"node":{"path":"/bpm6-admin/bpm6-admin-instance/","title":"인스턴스 관리기능"}},{"node":{"path":"/bpm-concept/workflow/","title":"워크플로우"}},{"node":{"path":"/bpm-concept/workflow-management-system/","title":"워크플로우 관리 시스템과 RTE BPM"}},{"node":{"path":"/bpm-concept/open-source/","title":"오픈소스 BPMS uEngine 소개"}},{"node":{"path":"/bpm-concept/facebook/","title":"Facebook group"}},{"node":{"path":"/bpm-concept/example-video/","title":"Example Video"}},{"node":{"path":"/api-customizing/transaction-listener/","title":"uEngine6 트랜잭션 리스너"}},{"node":{"path":"/bpm-concept/business-process/","title":"비즈니스 프로세스와 BPM"}},{"node":{"path":"/api-customizing/script-task/","title":"ScriptTask"}},{"node":{"path":"/api-customizing/migration/","title":"uEngine3.x 마이그래이션"}},{"node":{"path":"/api-customizing/new-activity/","title":"새로운 액티비티 타입 만들기"}},{"node":{"path":"/api-customizing/message-listener/","title":"[API] Message Listener API"}},{"node":{"path":"/api-customizing/external-service/","title":"애플리케이션과 BPM 연동(비동기 방식)"}},{"node":{"path":"/api-customizing/create-project/","title":"uEngine6 기반 프로젝트 만들기"}},{"node":{"path":"/api-customizing/bpm-to-service/","title":"BPM에서 외부 서비스 연동 "}},{"node":{"path":"/api-customizing/api-reference/","title":"uEngine6 API Reference"}},{"node":{"path":"/api-customizing/api-reference-old/","title":"uEngine6 API Reference"}},{"node":{"path":"/ai-generating/process-definition/","title":"프로세스 정의 가이드"}},{"node":{"path":"/ai-generating/","title":"AI를 활용한 프로세스 생성 기능 소개"}},{"node":{"path":"/ai-generating/form-definition/","title":"폼 정의 가이드"}}]}},"context":{}}